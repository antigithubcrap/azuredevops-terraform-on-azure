{
    "id": "A81201AB-236E-4BB9-9A7C-68797CFE6384",
    "name": "terraform-on-azure-apply",
    "friendlyName": "Terraform on Azure - Apply",
    "description": "Run Terraform over your Linux build agent host on Azure (with best practices).",
    "helpUrl": "https://github.com/antigithubcrap/azuredevops-terraform-on-azure/issues",
    "helpMarkDown": "[More Information](https://github.com/antigithubcrap/azuredevops-terraform-on-azure#readme)",
    "category": "Azure Pipelines",
    "visibility": [ "Build", "Release" ],
    "author": "Marceline Abadeer - x-Commerce Labs",
    "runsOn": [ "Agent" ],
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 14
    },
    "instanceNameFormat": "Terraform $(commandPickList)",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "templatesFilePath",
            "type": "filePath",
            "label": "Templates path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Path where Terraform templates are stored (this path becomes the working folder)."
        },
        {
            "name": "commandPickList",
            "type": "pickList",
            "label": "Command",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Terraform command to execute",
            "options": {
                "Plan": "Plan",
                "Apply": "Apply"
            },
            "properties": {
                "EditableOptions": false
            }
        },
        {
            "name": "saveGeneratedExecutionPlanBoolean",
            "type": "boolean",
            "label": "Save generated execution plan",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to save the generated execution plan (this plan can then be used with terraform apply).",
            "visibleRule": "commandPickList == Plan"
        },
        {
            "name": "generatedExecutionPlanName",
            "type": "string",
            "label": "Generated execution plan name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Generated execution plan name.",
            "visibleRule": "saveGeneratedExecutionPlanBoolean == true"
        },
        {
            "name": "useSavedExecutionPlanBoolean",
            "type": "boolean",
            "label": "Use saved execution plan",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to use the saved execution plan (from terraform plan).",
            "visibleRule": "commandPickList == Apply"
        },
        {
            "name": "savedExecutionPlanName",
            "type": "string",
            "label": "Saved execution plan name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Saved execution plan name.",
            "visibleRule": "useSavedExecutionPlanBoolean == true"
        },
        {
            "name": "variablesMultiline",
            "type": "multiline",
            "label": "Variables",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Terraform variables (one per line to avoid incorrect configuration)",
            "visibleRule": "commandPickList == Plan || useSavedExecutionPlanBoolean == false"
        },
        {
            "name": "useVariablesFileBoolean",
            "type": "boolean",
            "label": "Use variables file",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to use a variables file",
            "visibleRule": "commandPickList == Plan || useSavedExecutionPlanBoolean == false"
        },
        {
            "name": "variablesFilePath",
            "type": "filePath",
            "label": "Variables File Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Path to variables file",
            "visibleRule": "useVariablesFileBoolean == true"
        },
        {
            "name": "terraformBackendConfigurationFilePath",
            "type": "filePath",
            "label": "Terraform backend configuration file path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Path where Terraform backend configuration file is located, leave it empty if backend configuration file is already set up.",
            "groupName": "advanced"
        },
        {
            "name": "terraformFilePath",
            "type": "filePath",
            "label": "Terraform path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Path where Terraform executable is located, leave it empty if using environment variable (export).",
            "groupName": "advanced"
        },
        {
            "name": "validateTemplatesBoolean",
            "type": "boolean",
            "label": "Validate templates",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to validate templates before using them ([terraform validate](https://www.terraform.io/docs/commands/validate.html)).",
            "groupName": "advanced"
        },
        {
            "name": "validateTemplatesVariablesBoolean",
            "type": "boolean",
            "label": "Validate templates' variables",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to validate templates' variables.",
            "groupName": "advanced",
            "visibleRule": "validateTemplatesBoolean == true"
        },
        {
            "name": "failOnStdErrBoolean",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check if you want to fail this task if any errors are written to the StandardError stream.",
            "groupName": "advanced"
        }
    ],
    "execution": {
        "Node": {
            "target": "terraformapply.js"
        }
    }
}
